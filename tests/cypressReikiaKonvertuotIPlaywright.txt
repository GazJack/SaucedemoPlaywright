1 Login.cy.js

describe("Test Case 1", () => {
  const users = [
    { username: "standard_user", password: "secret_sauce", shouldLogin: true },
    { username: "locked_out_user", password: "secret_sauce", shouldLogin: false, error: "Sorry, this user has been locked out." },
    { username: "problem_user", password: "secret_sauce", shouldLogin: true },
    { username: "performance_glitch_user", password: "secret_sauce", shouldLogin: true },
    { username: "error_user", password: "secret_sauce", shouldLogin: true },
    { username: "visual_user", password: "secret_sauce", shouldLogin: true }
  ];

  users.forEach(user => {
    it(`Login  ${user.username}`, () => {
      cy.login(user.username, user.password);
      if (user.shouldLogin) {
        cy.url().should("include", "/inventory.html");
      } else {
        cy.get("[data-test='error']").should("contain", user.error);
      }
    });
  });

  it("Empty username and correct password", () => {
    cy.visit("https://www.saucedemo.com/");
    cy.get('[data-test="password"]').type('secret_sauce');
    cy.get('[data-test="login-button"]').click();
    cy.get('[data-test="title"]').should('be.visible');
  });

  it("Correct username and empty password", () => {
    cy.visit("https://www.saucedemo.com/");
    cy.get('[data-test="username"]').type('standart_user');
    cy.get('[data-test="login-button"]').click();
    cy.get('[data-test="title"]').should('be.visible');
  });

  it("Empty username and password", () => {
    cy.visit("https://www.saucedemo.com/");
    cy.get('[data-test="login-button"]').click();
    cy.get('[data-test="title"]').should('be.visible');
  });
});
___________________________________________________________
2 Cart.cy.js

const users = [
    'standard_user',
    'problem_user',
    'performance_glitch_user',
    'error_user',
    'visual_user'
  ];
  
  describe('Test Case 2', () => {
    users.forEach(user => {
      it(`Adding and removing items from the cart with user: ${user}`, () => {
        cy.login(user, 'secret_sauce')  
        cy.get('[data-test="add-to-cart-sauce-labs-backpack"]').click();
        cy.get('[data-test="add-to-cart-sauce-labs-bike-light"]').click();
        cy.get('[data-test="add-to-cart-sauce-labs-bolt-t-shirt"]').click();
        cy.get('[data-test="add-to-cart-sauce-labs-fleece-jacket"]').click();
        cy.get('[data-test="add-to-cart-sauce-labs-onesie"]').click();
        cy.get('[data-test="add-to-cart-test.allthethings()-t-shirt-(red)"]').click();
        cy.get('[data-test="shopping-cart-link"]').should('have.text', '6');
        cy.get('[data-test="remove-sauce-labs-backpack"]').click();
        cy.get('[data-test="remove-sauce-labs-bike-light"]').click();
        cy.get('[data-test="remove-sauce-labs-bolt-t-shirt"]').click();
        cy.get('[data-test="remove-sauce-labs-fleece-jacket"]').click();
        cy.get('[data-test="remove-sauce-labs-onesie"]').click();
        cy.get('[data-test="remove-test.allthethings()-t-shirt-(red)"]').click();
        cy.get('[data-test="shopping-cart-link"]').should('have.text', '');
      });
    });
  });
___________________________________________________________
3 Sortings.cy.js

const users = [
  'standard_user',
  'problem_user',
  'performance_glitch_user',
  'error_user',
  'visual_user'
];

describe('Test Case 3', () => {
  users.forEach(user => {
    describe(`Testing with user: ${user}`, () => {
      beforeEach(() => {
        cy.login(user, 'secret_sauce');
      });

      it('Filters and sorts products by name (A to Z)', () => {
        cy.get('[data-test="product-sort-container"]').select('az');
        cy.get('.inventory_item_name').then(($items) => {
          const names = [...$items].map(item => item.innerText);
          expect(names).to.deep.equal([...names].sort());
        });
      });

      it('Filters and sorts products by name (Z to A)', () => {
        cy.get('[data-test="product-sort-container"]').select('za');
        cy.get('.inventory_item_name').then(($items) => {
          const names = [...$items].map(item => item.innerText);
          expect(names).to.deep.equal([...names].sort().reverse());
        });
      });

      it('Filters and sorts products by price (low to high)', () => {
        cy.get('[data-test="product-sort-container"]').select('lohi');
        cy.get('.inventory_item_price').then(($prices) => {
          const prices = [...$prices].map(price => parseFloat(price.innerText.replace('$', '')));
          expect(prices).to.deep.equal([...prices].sort((a, b) => a - b));
        });
      });

      it('Filters and sorts products by price (high to low)', () => {
        cy.get('[data-test="product-sort-container"]').select('hilo');
        cy.get('.inventory_item_price').then(($prices) => {
          const prices = [...$prices].map(price => parseFloat(price.innerText.replace('$', '')));
          expect(prices).to.deep.equal([...prices].sort((a, b) => b - a));
        });
      });
    });
  });
});
___________________________________________________________
4 Ordering cy.js

const users = [
    'standard_user',
    'problem_user',
    'performance_glitch_user',
    'error_user',
    'visual_user'
];

describe('Test Case 4', () => {
    users.forEach(user => {
        describe(`Testing with user: ${user}`, () => {
            beforeEach(() => {
                cy.login(user, 'secret_sauce');

            });

            it('Purchasing', () => {
                cy.get('[data-test="add-to-cart-sauce-labs-backpack"]').click();
                cy.get('[data-test="shopping-cart-link"]').click();
                cy.get('[data-test="checkout"]').click();
                cy.get('[data-test="firstName"]').type('Zebrė');
                cy.get('[data-test="lastName"]').type('Zebrauskė');
                cy.get('[data-test="postalCode"]').type('92317');
                cy.get('[data-test="continue"]').click();
                cy.get('[data-test="checkout-summary-container"]').should('be.visible');
                cy.get('[data-test="finish"]').click();
                cy.get('[data-test="checkout-complete-container"]').should('be.visible');
            });
        });
    });
});
___________________________________________________________
5 Logout.cy.js

const users = [
    'standard_user',
    'problem_user',
    'performance_glitch_user',
    'error_user',
    'visual_user'
];

describe('Test Case 5', () => {
    users.forEach(user => {
        describe(`Logout with user: ${user}`, () => {
            beforeEach(() => {
                cy.login(user, 'secret_sauce');

            });

            it('Logout', () => {
               cy.get("#react-burger-menu-btn").click();
               cy.get('[data-test="logout-sidebar-link"]').click();
               cy.get('[data-test="login-container"]').should('be.visible');
            });
        });
    });
});

